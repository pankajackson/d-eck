---
eck-elasticsearch:
  enabled: true
  version: 7.17.7
  fullnameOverride: dht-elastic
  annotations:
    eck.k8s.elastic.co/license: basic
  nodeSets:
  - name: masters
    count: 1
    config:
      node.roles: ["master"]
      xpack:
        security:
          authc:
            realms:
              # active_directory:
              ldap:
                disad:
                  order: 1
                  url: "ldap://openldap.openldap:389"
#                  bind_dn: "cn=admin,dc=jackson,dc=com"
#                  bind_password: 'Not@SecurePassw0rd'
#                  user_search:
#                    base_dn: "ou=users,dc=jackson,dc=com"
#                    filter: "(cn={0})"
                  user_dn_templates:
                    - "cn={0}, ou=users, dc=jackson, dc=com"
                  group_search:
                    base_dn: "dc=jackson,dc=com"
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 100m
            limits:
              memory: 2Gi
              cpu: 1
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - master
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            # storage: 1Ti
            storage: 5Gi
        # storageClassName: local-storage
  - name: hot
    count: 1
    config:
      node.roles: ["data_hot", "data_content", "ingest"]
      xpack:
        security:
          authc:
            realms:
              # active_directory:
              ldap:
                disad:
                  order: 1
                  url: "ldap://openldap.openldap:389"
#                  bind_dn: "cn=admin,dc=jackson,dc=com"
#                  bind_password: 'Not@SecurePassw0rd'
#                  user_search:
#                    base_dn: "ou=users,dc=jackson,dc=com"
#                    filter: "(cn={0})"
                  user_dn_templates:
                    - "cn={0}, ou=users, dc=jackson, dc=com"
                  group_search:
                    base_dn: "dc=jackson,dc=com"
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 2Gi
              cpu: 100m
            limits:
              memory: 3Gi
              cpu: 2
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - hot
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            # storage: 1Ti
            storage: 8Gi
        # storageClassName: local-storage
  - name: cold
    count: 0
    config:
      node.roles: ["data_cold"]
      xpack:
        security:
          authc:
            realms:
              # active_directory:
              ldap:
                disad:
                  order: 1
                  url: "ldap://openldap.openldap:389"
#                  bind_dn: "cn=admin,dc=jackson,dc=com"
#                  bind_password: 'Not@SecurePassw0rd'
#                  user_search:
#                    base_dn: "ou=users,dc=jackson,dc=com"
#                    filter: "(cn={0})"
                  user_dn_templates:
                    - "cn={0}, ou=users, dc=jackson, dc=com"
                  group_search:
                    base_dn: "dc=jackson,dc=com"
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 100m
            limits:
              memory: 2Gi
              cpu: 1
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - cold
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        # storageClassName: local-storage

  http:
    service:
      spec:
        type: LoadBalancer
#        ports:
#        - name: https
#          protocol: TCP
#          port: 9200
#          targetPort: 9200
#          nodePort: 39200
    tls:
      selfSignedCertificate:
        disabled: true
      certificate:
        secretName: custom-tls-secret


eck-kibana:
  enabled: true
  version: 7.17.7
  fullnameOverride: dht-kibana
  annotations:
    eck.k8s.elastic.co/license: basic
  spec:
    elasticsearchRef:
      name: dht-elastic
    count: 1
    podTemplate:
      spec:
        containers:
        - name: kibana
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=2048"
          resources:
            requests:
              memory: 1Gi
              cpu: 100m
            limits:
              memory: 2Gi
              cpu: 2
    http:
      service:
        spec:
          type: LoadBalancer
#          ports:
#          - name: https
#            protocol: TCP
#            port: 5601
#            targetPort: 5601
#            nodePort: 35601
      tls:
        selfSignedCertificate:
          disabled: true
        certificate:
          secretName: custom-tls-secret

